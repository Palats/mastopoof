syntax = "proto3";

package mastopoof;

service Mastopoof {
    rpc Ping(PingRequest) returns (PingResponse);

    // Get opened statuses and a bit of context if needed.
    // Used on client opening.
    rpc InitialStatuses(InitialStatusesRequest) returns (InitialStatusesResponse);
    // Get a status by stream position.
    rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);
}

message PingRequest {
    string msg = 1;
}

message PingResponse {
    string msg = 2;
}

message InitialStatusesRequest { }

message InitialStatusesResponse {
    // List of status the server thinks a client needs now.
    // In practice: list of opened but unread items.
    // It will means the statuses will be at last_read+1 and beyond.
    repeated Item items = 1;
    int64 last_read = 2;
}

message GetStatusRequest {
    // The index in the stream of the status to fetch.
    int64 position = 1;
}

message GetStatusResponse {
    Item item = 1;
}

// An item in the stream - i.e., a status with some metadata.
message Item {
    MastodonStatus status = 1;
    int64 position = 2;
}

// A single mastodon status.
message MastodonStatus {
    // JSON encoded mastodon status.
    string content = 1;
}